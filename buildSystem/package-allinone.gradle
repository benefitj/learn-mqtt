
apply plugin: 'maven'

// 配置是否将代码打包到一个jar中
def allInOne = true

jar {
    from {
        if (allInOne) {
            def allProjects = new ConcurrentHashMap<>();
            getRootProject().subprojects.forEach({
                allProjects.put("${it.group}-${it.version}.jar" as String, it)
            })
            return configurations.compile.collect {
                if (allProjects.containsKey(it.name)) {
                    it.isDirectory() ? it : zipTree(it)
                }
            }
        } else {
            return it
        }
    }
}

sourceJar {
    from {
        if (allInOne) {
            def allProjects = new ConcurrentHashMap<>()
            getRootProject().subprojects.forEach({
                allProjects.put("${it.group}-${it.version}.jar" as String, it)
            })
            return configurations.compile.collect {
                if (allProjects.containsKey(it.getName())) {
                    allProjects.get(it.getName()).sourceSets.main.allSource
                }
            }
        } else {
            return sourceSets.main.allSource
        }
    }
}

import java.util.concurrent.ConcurrentHashMap

ext.groupId = getOrDefault(ext.groupId, "com.benefitj")
ext.artifactId = getOrDefault(ext.artifactId, "${archivesBaseName}")
ext.versionId = getOrDefault(ext.versionId, "${version}")

//上传到nexus
uploadArchives {
    repositories {
        mavenDeployer {
            pom.groupId = "$groupId"
            pom.artifactId = "$artifactId"
            pom.version = "$versionId"

            if (allInOne) {
                def allProjects = new ConcurrentHashMap<>()
                getRootProject().subprojects.forEach({
                    allProjects.put("${it.name}" as String, it)
                })
                pom.whenConfigured { pom ->
                    def deps = pom.dependencies.stream()
                            .filter {dep -> !allProjects.containsKey(dep.groupId)}
                            .collect {dep -> dep}
                    pom.dependencies.clear()
                    pom.dependencies.addAll(deps)
                }
            }

            repository(url: "http://192.168.124.128:9001/repository/nexusCenter/") {
                authentication(userName: "admin", password: "admin123")
            }
        }
    }
}

static String getOrDefault(String str, String defaultValue) {
    return str != null && !str.trim().isEmpty() ? str : defaultValue
}